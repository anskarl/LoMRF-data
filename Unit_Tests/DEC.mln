//Evidence Predicates
Happens(event, time)
Close(id,id,dist,time)
Next(time,time)

//Initially

// Query prediactes
HoldsAt(fluent, time)

//Hidden predicates
Initiates(event, fluent, time)
Terminates(event, fluent, time)
StartsAt(event, fluent,time)
StopsAt(event, fluent, time)

//functions: events
event enter(id)
event exit(id)
event walking(id)
event abrupt(id)
event running(id)
event active(id)
event inactive(id)

//functions: fluents
fluent meet(id,id)
fluent fight(id,id)
fluent move(id,id)
fluent leaving_object(id,id)


/**
 * DEC3: MLN efficient DEC axioms
 */

Happens(e,t) ^ Initiates(e, f, t) <=> StartsAt(e, f, t).
Happens(e,t) ^ Terminates(e, f, t)  <=> StopsAt(e, f, t).

Next(t1,t0) ^ StartsAt(e, f, t0) => HoldsAt(f, t1).
Next(t1,t0) ^ StopsAt(e, f, t0)  => !HoldsAt(f, t1).

Next(t1,t0) ^ HoldsAt(f,t0) ^ !(Exist e StopsAt(e,f,t0))  => HoldsAt(f,t1).
Next(t1,t0) ^ !HoldsAt(f,t0) ^ !(Exist e StartsAt(e,f,t0)) => !HoldsAt(f,t1).

#include "DEC_DSA.mln"
